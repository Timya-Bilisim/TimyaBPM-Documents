"use strict";(self.webpackChunktimya=self.webpackChunktimya||[]).push([[683],{5023:(e,a,r)=>{r.r(a),r.d(a,{comp:()=>l,data:()=>d});var t=r(641);const n=[(0,t.Fv)('<h1 id="script-metotları-ve-kullanımları" tabindex="-1"><a class="header-anchor" href="#script-metotları-ve-kullanımları"><span>Script Metotları ve Kullanımları</span></a></h1><p><em>Script Metotları , C# dilinde yazılır. Aşağıda scriptlerde kullanılan metotların detayları ve örnek kullanımları verilmiştir.</em></p><p><em>Script oluşturmak için artı butonuna tıklanır ve daha sonra script adı ve metodlar yazılır.</em> (Bkz. Örnek )</p><p><strong>Örnek</strong><img src="/TimyaBPM-Documents/script.png" alt="alt text"></p><h2 id="_1-getval-metodu" tabindex="-1"><a class="header-anchor" href="#_1-getval-metodu"><span>1. getVal Metodu</span></a></h2><p>İlk parametrede belirtilen tablodan, ikinci parametredeki alan dışında bulunan veriyi alır.</p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">var konu = getVal(&quot;GidenEvrak&quot;, &quot;Konu&quot;);\n</pre><p>Bu örnekte, <code>GidenEvrak</code> tablosundaki <code>Konu</code> alanının değerini almak için kullanılır. <code>getVal</code> fonksiyonu, belirtilen tablo ve alan adına göre veriyi döndürür ve <code>konu</code> değişkenine atar.</p><h2 id="_2-warning-metodu" tabindex="-1"><a class="header-anchor" href="#_2-warning-metodu"><span>2. Warning Metodu</span></a></h2><p>Bir aksiyon butonuna basıldığında uyarı mesajı çıkarır ve bu uyarı mesajı görüntülendiğinde kullanıcı &quot;Evet&quot; butonuna basarsa süreç devam eder.</p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">Warning(konu.ToString());\n</pre><p>Bu örnekte, <code>Warning</code> fonksiyonu çağrıldığında ekrana <code>konu</code> değerini içeren bir uyarı mesajı çıkar.</p><h2 id="_3-error-metodu" tabindex="-1"><a class="header-anchor" href="#_3-error-metodu"><span>3. Error Metodu</span></a></h2><p>Kullanıcıya hata mesajı gösterir ve sürecin devam etmesine izin vermez.</p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">Error(konu.ToString());\n</pre><p>Bu örnekte, <code>Error</code> fonksiyonu çalıştığında ekranda <code>konu</code> değerini içeren bir hata mesajı görüntülenir ve işlem durdurulur.</p><h2 id="_4-setval-metodu" tabindex="-1"><a class="header-anchor" href="#_4-setval-metodu"><span>4. setVal Metodu</span></a></h2><p>Veri tanımlarında tanımlanan değerlere atama yapmak için kullanılır.</p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">setVal(&quot;GidenEvrak&quot;, &quot;Konu&quot;, &quot;Konu alanı scriptten geldi&quot;);\n</pre><p>Bu örnekte, <code>GidenEvrak</code> tablosundaki <code>Konu</code> alanına <code>&quot;Konu alanı scriptten geldi&quot;</code> metni yazılır.</p><h2 id="_5-select-metodu" tabindex="-1"><a class="header-anchor" href="#_5-select-metodu"><span>5. Select Metodu</span></a></h2><p> Veritabanından veri almak için kullanılır ve sonuç olarak değer döner. Ancak, bu verilerin kullanılabilmesi için dönüşüm işlemleri yapılması gerekir. Aşağıda dönüşümler detaylıca açıklanmıştır. </p><h3>Kullanım Örneği:</h3><pre style="background-color:black;color:white;padding:10px;">Select(&quot;SELECT * FROM Departments&quot;);\n</pre><h3> 5.1. getDataTable Metodu </h3><p><p><code>SELECT</code> sorgusunun sonuçlarını <strong>DataTable</strong> formatında döndürür. Bu yöntem, verilerin <strong>tablo şeklinde organize edilmesini</strong> sağlar .</p></p><p><strong>Etiket:</strong> <code>DataTable</code>, <code>SQL</code>, <code>Veri İşleme</code></p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">DataTable dt = Select(&quot;SELECT * FROM Departments&quot;).getDataTable();\n</pre><p>Bu örnekte, <code>Departments</code> tablosundaki tüm veriler alınarak <code>dt</code> adlı bir DataTable nesnesine atanır.</p><h3>5.2. text Metodu</h3><p><code>SELECT</code> sorgusundan dönen veriyi <strong>metin formatında</strong> döndürür. </p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">string departman = Select(&quot;SELECT TOP 1 DepartmentName FROM Departments&quot;).Text();\n</pre><p> Bu örnek, <code>Departments</code> tablosundan ilk departman adını metin formatında alarak <code>departman</code> adlı string değişkenine atar. </p><h3> 5.3. int Metodu</h3><p><code>SELECT</code> sorgusundan dönen veriyi tam sayı değeri döndürür. </p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">int departman = Select(&quot;SELECT COUNT(*) FROM Departments&quot;).Int();\n</pre><p>Bu örnek, <code>Departments</code> tablosundaki toplam departman sayısını tam sayı formatında alarak <code>departman</code> adlı int değişkenine atar.</p><h3>5.4. listInt Metodu</h3><p><code>SELECT</code> sorgusundan dönen veriyi <strong>tam sayılardan oluşan bir liste</strong> olarak döndürür. </p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">List&lt;int&gt; departmanlar = Select(&quot;SELECT DepartmentId FROM Departments&quot;).ListInt();\n</pre><p> Bu örnek, <code>Departments</code> tablosundaki tüm departman kimliklerini (<code>DepartmentId</code>) alarak <code>departmanlar</code> adlı <code>List&lt;int&gt;</code> tipindeki değişkene atar. </p><h3>5.5.listStr Metodu</h3><p><code>SELECT</code> sorgusundan dönen veriyi <strong>string tipi bir liste</strong> olarak döndürür. Eğer veri bulunamazsa boş bir dizi döner (null döndürmez). </p><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">List&lt;string&gt; departmanlar = Select(&quot;SELECT DepartmentName FROM Departments&quot;).ListStr();\n</pre><p> Bu örnek, <code>Departments</code> tablosundaki tüm departman isimlerini (<code>DepartmentName</code>) alarak <code>departmanlar</code> adlı <code>List&lt;string&gt;</code> tipindeki değişkene atar. </p><h2 id="_6-sendmail-metodu" tabindex="-1"><a class="header-anchor" href="#_6-sendmail-metodu"><span>6. sendMail Metodu</span></a></h2><p>Belirtilen adrese mail gönderir.</p><p><strong>Method Yapısı:</strong></p><pre style="background-color:black;color:white;padding:10px;">SendMail(&quot;stringToEmail&quot;, &quot;string subject&quot;, &quot;string body&quot;);\n</pre><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;">SendMail(&quot;bpm@timya.com.tr&quot;, &quot;timya bpm scripti ile gönderildi&quot;, &quot;body timya bpm script ile gönderildi&quot;);\n</pre><p>Bu örnek, <code>bpm@timya.com.tr</code> adresine bir e-posta gönderir.</p><p>Birden fazla kişiye gönderirken adresler virgül ile ayrılır:</p><pre style="background-color:black;color:white;padding:10px;">SendMail(&quot;bpm@timya.com.tr, ikinciAdres@timya.com.tr&quot;, &quot;timya bpm scripti ile gönderildi&quot;, &quot;body timya bpm script ile gönderildi&quot;);\n</pre><h2 id="_7-sendmails-metodu" tabindex="-1"><a class="header-anchor" href="#_7-sendmails-metodu"><span>7. sendMails Metodu</span></a></h2><p>Alıcıların mail adreslerini string içinde liste olarak gönderir.</p><p><strong>Method Yapısı:</strong></p><pre style="background-color:black;color:white;padding:10px;">SendMails(List&lt;string&gt; recipientEmails, string subject, string body);\n</pre><h2 id="_8-globalvariables-metodu" tabindex="-1"><a class="header-anchor" href="#_8-globalvariables-metodu"><span>8. GlobalVariables Metodu</span></a></h2><p>GlobalVariables, tüm süreçler tarafından erişilebilen ve ortak değişkenleri yöneten bir yapıdır.</p><h3>8.1. setGlobalVal Metodu </h3><p> Ortak bir değişkenin <strong> değerini kaydetmek</strong> için kullanılır ve tüm süreçlerde erişilebilir. </p><p><strong>Method Yapısı:</strong></p><pre style="background-color:black;color:white;padding:10px;"><code class="csharp">void setGlobalVal(string Name, object val);</code>\n</pre><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;"><code class="csharp">setGlobalVal(&quot;Ortak_gonderen&quot;, &quot;firma adı&quot;);</code>\n</pre><h3>8.2. getGlobalVal Metodu </h3><p> Ortak bir değişkenin <strong>değerini almak </strong>için kullanılır ve tüm süreçlerde erişilebilir. </p><p><strong>Method Yapısı:</strong></p><pre style="background-color:black;color:white;padding:10px;"><code class="csharp">object getGlobalVal(string Name);</code>\n</pre><p><strong>Kullanım Örneği:</strong></p><pre style="background-color:black;color:white;padding:10px;"><code class="csharp">var gonderen = getGlobalVal(&quot;Ortak_gonderen&quot;);</code>\n</pre>',81)],o={},l=(0,r(6262).A)(o,[["render",function(e,a){return(0,t.uX)(),(0,t.CE)("div",null,n)}]]),d=JSON.parse('{"path":"/script.html","title":"Script Metotları ve Kullanımları","lang":"tr","frontmatter":{},"headers":[{"level":2,"title":"1. getVal Metodu","slug":"_1-getval-metodu","link":"#_1-getval-metodu","children":[]},{"level":2,"title":"2. Warning Metodu","slug":"_2-warning-metodu","link":"#_2-warning-metodu","children":[]},{"level":2,"title":"3. Error Metodu","slug":"_3-error-metodu","link":"#_3-error-metodu","children":[]},{"level":2,"title":"4. setVal Metodu","slug":"_4-setval-metodu","link":"#_4-setval-metodu","children":[]},{"level":2,"title":"5. Select Metodu","slug":"_5-select-metodu","link":"#_5-select-metodu","children":[]},{"level":2,"title":"6. sendMail Metodu","slug":"_6-sendmail-metodu","link":"#_6-sendmail-metodu","children":[]},{"level":2,"title":"7. sendMails Metodu","slug":"_7-sendmails-metodu","link":"#_7-sendmails-metodu","children":[]},{"level":2,"title":"8. GlobalVariables Metodu","slug":"_8-globalvariables-metodu","link":"#_8-globalvariables-metodu","children":[]}],"git":{"updatedTime":1730390297000,"contributors":[{"name":"NURŞAH YILDIZ","email":"nursah.yildiz@timyabilisim.com.tr","commits":1}]},"filePathRelative":"script.md"}')}}]);